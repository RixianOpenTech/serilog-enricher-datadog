trigger: [ "*" ]

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    
    variables:
      buildConfiguration: 'Release'
      system.prefergit: true
    
    steps:
    - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
      persistCredentials: true  # set to 'true' to leave the OAuth token in the Git config after the initial fetch. Required for git commands.
    
    - task: DotNetCoreInstaller@0
      displayName: 'Install .NET Core SDK'
      inputs:
        version: '2.2.204'
    
    - script: dotnet restore
      displayName: 'Restore'
    
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build'
    
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Pack
      inputs:
        command: custom
        projects: '**/src/**/*.csproj'
        custom: pack
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:SourceRevisionId=$(Build.BuildNumber) --verbosity Detailed'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'


- stage: Release
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Release
    pool:
      name: Hosted Ubuntu 1604
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 5.0.2'
      inputs:
        versionSpec: 5.0.2
#    - task: NuGetCommand@2
#      inputs:
#        command: 'push'
#        feedsToUse: 'select'
#        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#        nuGetFeedType: 'external'
#        publishFeedCredentials: 'nuget.org'
#        versioningScheme: 'off'